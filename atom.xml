<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mikochi&#39;s blog</title>
  
  <subtitle>Welcome~</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-24T12:44:42.063Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mikochi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>线性代数-行列式-思考题</title>
    <link href="http://example.com/2020/11/24/linearmath-think3/"/>
    <id>http://example.com/2020/11/24/linearmath-think3/</id>
    <published>2020-11-24T06:22:01.000Z</published>
    <updated>2020-11-24T12:44:42.063Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、计算以下行列式"><a href="#1、计算以下行列式" class="headerlink" title="1、计算以下行列式"></a>1、计算以下行列式</h3><script type="math/tex; mode=display">\begin{vmatrix}k&\lambda&\lambda&\cdots&\lambda\\\lambda&k&\lambda&\cdots&\lambda\\\vdots&\vdots&\vdots&&\vdots\\\lambda&\lambda&\lambda&\cdots&k\\\end{vmatrix}_{n\times n}</script><p>解：</p><p>把相邻两行相减，得到等价行列式矩阵后对第一行展开：</p><script type="math/tex; mode=display">\begin{vmatrix}k&\lambda&\lambda&\cdots&\lambda\\\lambda-k&k-\lambda&0&\cdots&0\\\vdots&\vdots&\vdots&&\vdots\\0&0&0&\cdots&k-\lambda\\\end{vmatrix}_{n\times n}\\\=k\cdot\begin{vmatrix}k-\lambda&0&\cdots&0\\\lambda-k&k-\lambda&\cdots&0\\\vdots&\vdots&&\vdots\\0&0&\cdots&k-\lambda\\\end{vmatrix}_{(n-1)\times(n-1)}\\+(n-1)\lambda\cdot\begin{vmatrix}\lambda-k&0&\cdots&0\\\lambda-k&k-\lambda&\cdots&0\\\vdots&\vdots&&\vdots\\0&0&\cdots&k-\lambda\\\end{vmatrix}_{(n-1)\times(n-1)}\\=[k-(n-1)\lambda]</script><p>//？</p><h3 id="2、证明范德蒙行列式"><a href="#2、证明范德蒙行列式" class="headerlink" title="2、证明范德蒙行列式"></a>2、证明范德蒙行列式</h3><script type="math/tex; mode=display">\begin{vmatrix}1&1&1&\cdots&1\\a_1&a_2&a_3&\cdots&a_n\\a_1^2&a_2^2&a_3^2&\cdots&a_n^2\\\vdots&\vdots&\vdots&&\vdots\\a_1^{n-2}&a_2^{n-2}&a_3^{n-2}&\cdots&a_n^{n-2}\\a_1^{n-1}&a_2^{n-1}&a_3^{n-1}&\cdots&a_n^{n-1}\\\end{vmatrix}=\prod_{1\leq j<i\leq n}(a_i-a_j)</script><p>证明：</p><p>我们将$row_i-a_1row_{i-1}$，得</p><script type="math/tex; mode=display">\begin{vmatrix}1&1&1&\dots&1\\0&a_2-a_1&a_3-a_1&\cdots&a_n-a_1\\0&a_2(a_2-a_1)&a_3(a_3-a_1)&\cdots&a_n(a_n-a_1)\\\vdots&\vdots&\vdots&&\vdots\\0&a_2^{n-2}(a_2-a_1)&a_3^{n-2}(a_3-a_1)&\cdots&a_n^{n-2}(a_n-a_1)\\\end{vmatrix}_{n\times n}</script><p>对第一列进行展开，再提取每列公因式得</p><script type="math/tex; mode=display">detA=1\cdot\begin{vmatrix}a_2-a_1&a_3-a_1&\cdots&a_n-a_1\\a_2(a_2-a_1)&a_3(a_3-a_1)&\cdots&a_n(a_n-a_1)\\\vdots&\vdots&&\vdots\\a_2^{n-2}(a_2-a_1)&a_3^{n-2}(a_3-a_1)&\cdots&a_n^{n-2}(a_n-a_1)\\\end{vmatrix}_{(n-1)\times(n-1)}\\=(a_2-a_1)(a_3-a_1)\cdots(a_n-a_1)\begin{vmatrix}1&1&\cdots&1\\a_2&a_3&\cdots&a_n\\\vdots&\vdots&&\vdots\\a_2^{n-2}&a_3^{n-2}&\cdots&a_n^{n-2}\end{vmatrix}_{(n-1)\times(n-1)}</script><p>继续展开得$detA=\prod_{1\leq j&lt;i\leq n}(a_i-a_j)$，证毕</p><p>更加严谨需要用数学归纳法。</p><h3 id="3、计算-n-阶行列式"><a href="#3、计算-n-阶行列式" class="headerlink" title="3、计算$n$阶行列式"></a>3、计算$n$阶行列式</h3><script type="math/tex; mode=display">D_n=\begin{vmatrix}a+b&ab&0&0&\cdots&0&0\\1&a+b&ab&0&\cdots&0&0\\0&1&a+b&ab&\cdots&0&0\\\vdots&\vdots&\vdots&\vdots&&\vdots&\vdots\\0&0&0&0&\cdots&1&a+b\\\end{vmatrix}_{n\times n},其中(a\neq b)</script><p>解：</p><p>对第一列展开，后对第二列展开得</p><script type="math/tex; mode=display">D_n=(a+b)\begin{vmatrix}a+b&ab&0&\cdots&0&0\\1&a+b&ab&\cdots&0&0\\\vdots&\vdots&\vdots&&\vdots&\vdots\\0&0&0&\cdots&1&a+b\\\end{vmatrix}_{(n-1)\times(n-1)}-1\cdot\begin{vmatrix}ab&0&0&\cdots&0&0\\1&a+b&ab&\cdots&0&0\\\vdots&\vdots&\vdots&&\vdots&\vdots\\0&0&0&\cdots&1&a+b\\\end{vmatrix}_{(n-1)\times(n-1)}\\=(a+b)\begin{vmatrix}a+b&ab&0&\cdots&0&0\\1&a+b&ab&\cdots&0&0\\\vdots&\vdots&\vdots&&\vdots&\vdots\\0&0&0&\cdots&1&a+b\\\end{vmatrix}_{(n-1)\times(n-1)}-ab\cdot\begin{vmatrix}a+b&ab&0&\cdots&0&0\\1&a+b&ab&\cdots&0&0\\\vdots&\vdots&\vdots&&\vdots&\vdots\\0&0&0&\cdots&1&a+b\\\end{vmatrix}_{(n-2)\times(n-2)}\\</script><p>故$D_n=(a+b)D_{n-1}-abD_{n-2}$</p><p>则$D_n-aD_{n-1}=b(D_{n-1}-aD_{n-2})$，可得$D_n=aD_{n-1}+ b^n,D_2=a^2+ab+b^2,D_1=a+b$。</p><p>由$a、b$等价，可得</p><script type="math/tex; mode=display">\begin{cases}D_n=aD_{n-1}+b^n\\D_n=bD_{n-1}+a^n\\\end{cases}\\\Rightarrow(b-a)D_n=b^{n+1}-a^{n+1}\\\RightarrowD_n=\frac{b^{n+1}-a^{n+1}}{b-a}\\\RightarrowD_n=a^n+a^{n-1}b+a^{n-2}b^2+\cdots+ab^{n-1}+b^n=\sum_{k=0}^na^kb^{n-k}\\</script><h3 id="4、计算三角分块矩阵行列式"><a href="#4、计算三角分块矩阵行列式" class="headerlink" title="4、计算三角分块矩阵行列式"></a>4、计算三角分块矩阵行列式</h3><p>设$A$、$B$、$C$都是数域$K$上的$n$阶矩阵，证明：</p><script type="math/tex; mode=display">\begin{vmatrix}A&0\\B&C\\\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}C\end{vmatrix}</script><p>我们考虑将$A$转化为下三角矩阵，即令$E_p\cdots E_2E_1A=U,L=E_1^{-1}E_2^{-1}\cdots E_p^{-1}$，其中$U$为下三角矩阵，$L$为初等行变换的逆变换。</p><script type="math/tex; mode=display">\left[\begin{matrix}L&0\\0&I\end{matrix}\right]\times\left[\begin{matrix}U&0\\B&C\\\end{matrix}\right]=\left[\begin{matrix}A&0\\B&C\\\end{matrix}\right]</script><p>对于第二个矩阵，我们将其按照$U​$对角线依次展开，可以得到$<br>\begin{vmatrix}U&amp;0\\B&amp;C\\\end{vmatrix}=u_1u_2\cdots u_n\begin{vmatrix}C\end{vmatrix}=\begin{vmatrix}U\end{vmatrix}\begin{vmatrix}C\end{vmatrix}​$，则</p><script type="math/tex; mode=display">\begin{vmatrix}A&0\\B&C\\\end{vmatrix}=\begin{vmatrix}L\end{vmatrix}\begin{vmatrix}I\end{vmatrix}\begin{vmatrix}U\end{vmatrix}\begin{vmatrix}C\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}C\end{vmatrix}</script><p>同理，对于$\begin{vmatrix}A&amp;B\\0&amp;C\\\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}C\end{vmatrix}$</p><h3 id="5、计算分块矩阵行列式"><a href="#5、计算分块矩阵行列式" class="headerlink" title="5、计算分块矩阵行列式"></a>5、计算分块矩阵行列式</h3><p>设$A$、$B$、$C$、$D$都是数域$K$上的$n$阶矩阵，且$AC=CA$，证明：</p><script type="math/tex; mode=display">\begin{vmatrix}A&B\\C&D\end{vmatrix}=\begin{vmatrix}AD-CB\end{vmatrix}</script><p>证明：</p><p>我们考虑初等行变换将矩阵转化为三角矩阵</p><p>当$A​$可逆时，</p><script type="math/tex; mode=display">\left[\begin{matrix}A&B\\C&D\\\end{matrix}\right]-[row_2+(-CA^{-1})row_1]\rightarrow\left[\begin{matrix}A&B\\C-CA^{-1}A&D-CA^{-1}B\\\end{matrix}\right]\rightarrow\left[\begin{matrix}A&B\\0&D-CA^{-1}B\\\end{matrix}\right],\\则\left[\begin{matrix}I&0\\-CA^{-1}&I\end{matrix}\right]\times\left[\begin{matrix}A&B\\C&D\\\end{matrix}\right]=\left[\begin{matrix}A&B\\0&D-CA^{-1}B\\\end{matrix}\right],\\则\begin{vmatrix}I\end{vmatrix}\begin{vmatrix}I\end{vmatrix}\begin{vmatrix}A&B\\C&D\\\end{vmatrix}=\begin{vmatrix}A\end{vmatrix}\begin{vmatrix}D-CA^{-1}B\end{vmatrix},\\则\begin{vmatrix}A&B\\C&D\\\end{vmatrix}=\begin{vmatrix}A(D-CA^{-1}B)\end{vmatrix}=\begin{vmatrix}AD-ACA^{-1}B\end{vmatrix}=\begin{vmatrix}AD-CAA^{-1}B\end{vmatrix}=\begin{vmatrix}AD-CB\end{vmatrix}\\</script><p>ps.分块矩阵行变换——行变换左乘、列变换右乘</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、计算以下行列式&quot;&gt;&lt;a href=&quot;#1、计算以下行列式&quot; class=&quot;headerlink&quot; title=&quot;1、计算以下行列式&quot;&gt;&lt;/a&gt;1、计算以下行列式&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\begin</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>前言</title>
    <link href="http://example.com/2020/11/21/hello-world-1/"/>
    <id>http://example.com/2020/11/21/hello-world-1/</id>
    <published>2020-11-20T16:46:10.000Z</published>
    <updated>2020-11-20T17:34:27.745Z</updated>
    
    <content type="html"><![CDATA[<p>​    这是一篇奇怪的前言。</p><p>​    首先热烈庆祝我的博客开通了！啪啪啪~（掌声）</p><p>​    这个博客是基于github和hexo搭建的，用的是melody主题，毕竟我这小白什么都不懂，只是想找一个地方写博客，发现都不是很理想，就尝试性地搭了一个博客。虽然现在还不是很完善，但是我也在尽力地学习怎么把它搭得更好看了……</p><p>​    那我就在这里说一说这个博客的搭建历程吧。</p><p>​    其实在我初高中学习信息竞赛的时候，老师就有培养我们写博客和总结的习惯，但是我当时的博客没有坚持下去，只是有时候会汇总一下自己所学的知识，所以就或多或少算是培养了一个写博客的兴趣和习惯基础吧。同时我自己就是比较喜欢随性地写写自己的想法的，所以用文字记录思想也是我的爱好之一。</p><p>​    当然上面只是间接因素，直接因素还是现在大学上课经常不自觉地就打起了瞌睡，导致上课的时候没有怎么听懂老师讲什么，只能在课下花多点时间学习，把学到的知识多梳理梳理、拓展拓展。这样想着，写博客这个想法就在我的脑海里蹦了出来了。然后想找一个比较理想的平台也找不着，学计算机的也总是想试试新奇的事物——所以，这个博客就诞生啦！</p><p>​    话说刚开始搭建这个博客时还好好的，但中间github pages好像突然登不上了，导致这个博客连不上，所以就有点让人失去热情，再加上事情太多，博客这件事就被搁置了。最近好像又能连上了，所以就把自己最近在写的学习笔记顺手放了上来，想着把它逐渐完善完善，说不定就能变成一个很好看的博客了呢？</p><p>​    话说博客很多功能都还没有实现，界面也不是很美观，甚至可能有时候会上不去，所以还是得多操点心呀——心累……</p><p>​    说说我对这个博客的一点期望吧。其实我还没有想好是要把这里当作是自己的一块自留地，在这里尽情地写自己的各种想法，还是要将它推广出去，和更多朋友一起分享我的想法和生活。当然我可没想着这个博客能火或者是怎么样，只是想到在漫长的时间长河里，在某一个瞬间、世界的某一个角落，有这么一个认识或者不认识的人，在通过这个博客和我进行着思想交流和碰撞，这就让人有一点感动和欣慰。</p><p>​    但是这个博客却不同于日记。在日记里我可以想怎么写就怎么写，不用顾及什么人什么事，只需要记录下当时最真实也最想记录的想法就好。但是在这里，考虑到包括隐私、读者等各种因素，必然无法将自己所有想法、所有思考都展现出来。作为弥补，我会尽量把真实的想法用文字记录下来，这些文字不一定是我所有的感受，但一定是我心里最真实也最能负责的那些想法。</p><p>​    曾经听过有人说，当一个人在写日记的时候，他在跟上帝对话，或者是在跟自己对话，这种对话于情于理都不应该被人所窥探——同样地，当一个人以“会告知别人”为前提写出来的文字，那必然不能保持写日记时那种神圣性和深刻性。这个博客不能照搬我平时写日记时的一些感受，这点我感到非常遗憾，也是我一直在思考到底要在博客上分享什么的原因。</p><p>​    但是写博客同样具有它的独特性，这是日记所不能拥有的。写博客的时候，似乎是在跟某个人倾诉自己的想法，在跟某个人分享自己的情感，在与某个灵魂进行触碰与交流，这是一件特别美好也特别令人向往的事情。我觉得在这个世界上，每个人都在走着自己的路，过客太多知己太少，以至于我们久而久之地几乎发自本能地向往接触别人的灵魂，也向往自己的灵魂能被别人接触。我们想要别人更加了解自己，也想要自己更加了解世界上其他的人——所以我们写文章，所以我们读书，所以我们发朋友圈，所以我们冥冥中在寻找着某些事物、某些人。当我们接触到这些事物或者人的时候，我们会发自灵魂深处地感到喜悦，从而联想到我们可能也正在成为着那个被寻找的人，一种难以言明的奇妙感受就涌上心头。</p><p>​    当然，关于学习笔记，只能说能力有限，写的都是自己乱七八糟的感受，更多的是写的时候的自我收获吧——当然如果有对你有用的东西我也会很开心的。</p><p>​    所以希望这个博客能给你带来一些美好的体验，也希望能够通过这个博客让自己逐渐自我迭代和进步。</p><p>​    最后是作为一个程序员的奇妙的仪式：</p><p>​    Hello World!</p><p>完稿于2020-11-21 1:24</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    这是一篇奇怪的前言。&lt;/p&gt;
&lt;p&gt;​    首先热烈庆祝我的博客开通了！啪啪啪~（掌声）&lt;/p&gt;
&lt;p&gt;​    这个博客是基于github和hexo搭建的，用的是melody主题，毕竟我这小白什么都不懂，只是想找一个地方写博客，发现都不是很理想，就尝试性地搭了</summary>
      
    
    
    
    <category term="日常生活" scheme="http://example.com/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>线性代数——行列式</title>
    <link href="http://example.com/2020/11/19/linearmath-det/"/>
    <id>http://example.com/2020/11/19/linearmath-det/</id>
    <published>2020-11-19T10:17:48.000Z</published>
    <updated>2020-12-01T07:24:22.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性代数——行列式"><a href="#线性代数——行列式" class="headerlink" title="线性代数——行列式"></a>线性代数——行列式</h1><h2 id="一些定义及本质"><a href="#一些定义及本质" class="headerlink" title="一些定义及本质"></a>一些定义及本质</h2><h3 id="循环定义"><a href="#循环定义" class="headerlink" title="循环定义"></a>循环定义</h3><p>对于可逆矩阵$2​$阶$A​$：</p><script type="math/tex; mode=display">\left[\begin{matrix}a&b\\c&d\\\end{matrix}\right]</script><p>我们有</p><script type="math/tex; mode=display">det A=ad-bc\\A^{-1}=\frac{1}{det A}\left[\begin{matrix}d&-b\\-c&a\\\end{matrix}\right]</script><p>显然当$detA=0$时$A^{-1}$不存在，即$A$为奇异矩阵——这既与$ad-bc=0$意味着$A$的列向量线性相关固安有关，也与$\frac{1}{detA}$不存在有关。</p><p>换句话说$detA=0$与$A$是否可逆有着密切相关的关系。而事实上，我们希望通过判断$detA$是否为$0$，得到$A$是否可逆的结论——而同时我们更希望把$detA$以某种形式从$2$阶拓展到更一般的情况。</p><p>下面正是基于以上需求与特征，用某种直观的方法对$detA$进行的一些定义。</p><p>对于$n$阶方阵$A$：</p><script type="math/tex; mode=display">\left[\begin{matrix}a_{11}&a_{12}&a_{13}\\a_{21}&a_{22}&a_{23}\\a_{31}&a_{32}&a_{33}\\\end{matrix}\right]</script><p>我们在经历过行化简算法后可以得到</p><script type="math/tex; mode=display">\left[\begin{matrix}a_{11}&a_{12}&a_{13}\\0&a_{11}a_{22}-a_{12}a_{21}&a_{11}a_{23}-a_{12}a_{21}\\0&0&a_{11}\Delta\end{matrix}\right]\\其中\Delta=a_{11}a_{22}a_{33}+a_{12}a_{23}a_{31}+a_{13}a_{21}a_{32}-a_{11}a_{23}a_{32}-a_{12}a_{21}a_{33}-a_{13}a_{22}a_{31}\tag{1}</script><p>我们可以看到，对于$3$阶矩阵$A$，我们希望$A$等价于$I_3$，也就是$a_{11}$、$a_{11}a_{22}-a_{12}a_{21}$、$a_{11}\Delta$都不为$0$。有趣的是，对于主对角线从左上角到右下角，分别包含了$1$阶、$2$阶矩阵的行列式形式。同样的，对于最右列主元$a_{11}\Delta$，在其余对角线元素都不为$0$（即$a_{11}$同样不为$0$）的情况下，我们希望通过令$\Delta=0$使$A$不可逆，也就是令$detA=\Delta$使得$detA$与可逆性密切相关。</p><p>需要注意的是，在行化简算法过程中，我们通过交换两行使得行化简有序进行（将全$0$行放到最后一行）。在其中我们$a$的下标会发生变化，但是为了方便，我们暂时不考虑主元位置出现$0$而被迫交换两行的情况——换句话说，我们认为$a$的下标不一定与原矩阵严格对应，但这并不影响我们对行列式的定义与探究。</p><p>那么我们开始讨论$\Delta$的特性，注意到$\Delta$中包含了一些相同因子，当我们取出$a_{11}$、$a_{12}$、$a_{13}$后有</p><script type="math/tex; mode=display">\Delta=a_{11}\cdot\begin{vmatrix}a_{22}&a_{23}\\a_{32}&a_{33}\\\end{vmatrix}+a_{12}\cdot\begin{vmatrix}a_{21}&a_{23}\\a_{31}&a_{33}\\\end{vmatrix}+a_{13}\cdot\begin{vmatrix}a_{21}&a_{22}\\a_{31}&a_{32}\\\end{vmatrix}\tag{2}</script><p>我们可以看到，$\Delta$的这个形式，包含了许多特性。首先，他将$3$阶行列式写成了$2$阶行列式的和，这让我们自然而然地产生一种思路——是否高阶行列式可以由低阶行列式表示？这也就形成了我们的基础思路，也就是标题所说的“循环定义”；其次，我们发现我们取出的$a_{11}$、$a_{12}$、$a_{13}$，全都在同一行。我们将这个取出方式成为“对第$1$行进行展开”；最后，我们考虑每一项的$a$的下标，对于$a_{ij}$，它所对应的行列式矩阵不包含第$i$行第$j​$列。</p><p>对于最后一个性质，我们意识到这是寻找高阶行列式对应低阶行列式的重要形式。在下面我们按照这条性质对$A$向更高阶进行拓展。</p><p>对于$n$阶方阵$A$，我们称$A_{i,j}$为$A$去除$i$行$j$列后的$n-1$阶子矩阵；</p><p>同时我们对于$A_{i,j}$，令$C_{i,j}=(-1)^{i+j}det A_{i,j}$，并把$C_{i,j}$称为余因子。</p><p>那么我们有</p><script type="math/tex; mode=display">detA=a_{11}detA_{11}-a_{12}detA_{12}+\dots+(-1)^{1+n}a_{1n}detA_{1n}\\=\sum_{j=1}^n(-1)^{1+j}a_{1j}detA_{1j}\\=\sum_{j=1}^na_{1j}C_{1j}</script><p>通过上述式子，我们能体会到为什么$A_{i,j}$称为子矩阵，而$C_{i,j}$称为余因子，这都与$detA$向更低阶拓展方式有着密不可分的联系。</p><p>更一般地，我们其实不仅可以对第$1$行，其实也可以对第$1$列展开。我们发现$A$矩阵在行列式意义下并没有严格的行列要求：1、$A$是一个方阵为行列等价提供基础条件；2、$A$可逆的等价条件中可以发现行与列之间的相关性；3、$A$所拓展出低阶行列式都是同时消去一行一列，而并不存在行列不平衡的状况；4、对于$(1)$式的$\Delta$，我们可以看到其实对于$a$的下标，一个很重要的特质是——每一项的行下标与列下标都刚好覆盖了$[1,n]$的所有数。也就是说，在下标意义上行和列同样是等价的（从数量、组合上）。这些一个个条件为行列等价提供了条件，使得我们开始思考——我们能否从列展开的角度去看待行列式？</p><p>事实上，我们有</p><script type="math/tex; mode=display">detA=\sum_{i=1}^na_{i1}C_{i1}</script><p>我们能看到对于行展开与列展开的行列式表达式有着非常对称的相似性，甚至说对于同一个式子，行展开与列展开仅仅只是枚举量的选择不同罢了。</p><p>我们不禁继续产生联想——对于行展开与列展开，都是只对当前矩阵的第$1$行与第$1$列进行的，那么我们是否能够选择任意一行或任意一列进行展开呢——换句话说，在行列式意义上，我们是否能够证明$a$的行列位置是等价的呢?</p><p>即</p><script type="math/tex; mode=display">detA=\sum_{j=1}^na_{pj}C_{pj}=\sum_{i=1}^na_{iq}C_{iq}</script><p>事实上，对于$a_{ij}$，其实只有$(-1)^{i+j}$取决于它的位置，而无论对于每一个行或列展开，始终有相同的$(-1)^{i+j}$稳定着它所在位置的贡献，即我们对于任意行或列展开，所得到的行列式都是相等的。</p><p>我们在后文会继续讨论相关问题，给出行列式意义下的位置的相关性探讨。</p><h3 id="展开定义"><a href="#展开定义" class="headerlink" title="展开定义"></a>展开定义</h3><p>展开定义是相对于循环定义所说的。由于循环过程中用到了低一阶的行列式，使其看上去比较简单，但是始终让人难以释怀。毕竟这意味着当我要计算一个行列式的时候，需要进一步展开$n$个低阶行列式，然后对于低阶行列式，还要进一步展开……</p><p>正因此，我们希望直接展开到最后，得到一个更加直观的式子——也就是我们所说的展开定义。</p><p>我们可以观察$(1)$式，对于$\Delta$的取值，我们可以看到它是由若干包含$n$个$a$的项构成的，也就是有若干个$n$次项。而对于每一项，我们可以从$a$下标观察出，每一项的行下标与列下标分别刚好覆盖$[1,n]$，而各项之间所选择的$a$互不相同。</p><p>更一般地说，如果我们对于每一项看成是$\pm a_{1p_1}a_{2p_2}\dots a_{np_n}（p_i之间互不相等）$，也就是按照行顺序排序，则列下标构成一个$n$的排列。而有多少个这样的项呢？如果从循环的角度看，每一个$k$阶行列式会提供$k$个低阶分支，也就是展开到最后有$n!$项——这恰好与$p_n$的排列数相等。又因为循环展开过程中展开一次就会为所在项提供一个因子$a$，那么每一个分支到最后形成的若干$a$的组合必然是唯一的——即$p_n$与所在分支末梢一一对应。这就意味着，当我们对一个行列式进行展开的时候，它的每一项恰好就是对$a_{ip_i}$排列的选择。</p><p>但是我们的问题并没有完全解决，因为每一项前面可能是$+$或者$-$，而这是如何决定我们是不知道的。有趣的事情来了，或许很难想象，但是对于$a_{1p_1}a_{2p_2}\dots a_{np_n}$的正负号取决于$p_1,p_2,\dots,p_n$的逆序对数！也就是说</p><script type="math/tex; mode=display">detA=\sum_p (-1)^{k} a_{1p1}a_{2p_2}\dots a_{np_n},k=\sum_{i=1}^{n-1} [p_i>p_{i+1}]</script><p>为什么逆序对数决定了每一项的正负号？这个会在后文有所提及。</p><p>事实上，无论是这里的逆序对数问题，还是上文行列式中的位置问题，都归根于初等行变换的两行交换对行列式的影响。从此也可以看出，初等行变换对于行列式的影响是多么基础与重要。当然，这些都是后文才会提及的内容了。</p><h3 id="高维体积定义"><a href="#高维体积定义" class="headerlink" title="高维体积定义"></a>高维体积定义</h3><p>这个完全是另一个不同的角度了，不同于代数，我们这次将从几何的意义考虑行列式。</p><p>对于平面空间里，我们考究$2$阶方阵$A$，它的$detA=ad-bc$，而这恰好是$(a,c)、(b,d)、(a+b,c+d)、(0,0)$这四个点所围成的平行四边形的面积。</p><p>对于三维空间里，我们考究$3$阶方阵$A=\left[\begin{matrix}a&amp;b&amp;c\\d&amp;e&amp;f\\h&amp;i&amp;j\end{matrix}\right]$，它的$detA$是$(a,d,h)、(b,e,i)、(c,f,j)、(0,0)、(a+b+c,d+e+f,h+i+j)$这五个点所围成的平形面六面体的体积。</p><p>对于更高维的空间，我们同样定义$detA$为由原点、各向量点、各向量和所围成的高维体的“体积”。</p><p>至于为什么是“体积”，我们可以在下文中继续探讨。</p><h3 id="伸缩因子定义"><a href="#伸缩因子定义" class="headerlink" title="伸缩因子定义"></a>伸缩因子定义</h3><p>其实矩阵可以看成是一种线性变换，而矩阵的行列式同样可以看成是对于该变换的一种描述——伸缩因子。</p><p>这个同样是在集合角度，将我们将几何空间中的每一个向量分解成几个基底的和，那么矩阵变换实际上可以看作作用在基底上。</p><p>考虑对于平面坐标系中，我们在坐标描述上，可以用$(x,y)$表述一个向量，也可以用$(\rho,\theta)$表述一个向量。而行列式可以以某种程度上表示成$\rho$。</p><p>考虑对于$A=\left[\begin{matrix}cos\theta &amp; -sin\theta\\sin\theta&amp;cos\theta\end{matrix}\right]​$，则$detA=cos^2\theta+sin^2\theta=1​$，也就是$\rho=1​$，只进行旋转变换。</p><p>同样的，我们考虑$A=\left[\begin{matrix}x_1&amp;x_2\\y_1&amp;y_2\end{matrix}\right]​$，$T=\left[\begin{matrix}a&amp;b\\c&amp;d\end{matrix}\right]​$，那么$A​$经过$T​$变换（$A\rightarrow TA​$），有</p><script type="math/tex; mode=display">S(A)=x_1y_2-x_2y_1\\TA=\left[\begin{matrix}ax_1+by_1&ax_1+by_2\\cx_1+dy_1&cx_2+dy_2\end{matrix}\right]\\S(TA)=(ax_1+by_1)(cx_2+dy_2)-(ax_1+by_2)(cx_1+dy_1)=(ad-bc)(x_1y_2-x_2y_1)\\=detT\cdot S(A)\tag{3}</script><p>我们能够看到二维平面下，$A$矩阵列向量对应的平行四边形面积经过$T$变换后变为原来的$detT$倍，这意味着$detT$可以作为描述变换过程中面积的变化率——也就是我们所说的“伸缩因子”。当然，这在更高维度上也是成立的。</p><p>当$detT&gt;1$时，高维体$A$伸张；当$detT&lt;1$时，$A$收缩；当$detT=1$时，$A$体积不变；</p><p>当$detT=0$时，$A$维度降低！也就是说如果$A$是一个三维空间的立体图形，那么它经过$T$变换后，$TA$将会变成一个三维空间中的一个平面、一条直线或者一个点。而经过“降维打击”后，$A$再也无法重新将维度恢复（矩阵变换不能升维）——这也就是为什么$detT=0$的矩阵$T$不可逆。</p><p>当$detT&lt;0$时，简单地说就是改变了矩阵的基的“右手法则”（求叉积时用到），这里不做讨论。</p><p>有趣的是，当我们结合高维体积定义来看$(3)​$式，就会发现$S(A)​$其实就是$detA​$，也就是说$det(TA)=detT\cdot detA​$，换句话说，行列式其实也可以看成是作用在行列式身上的一种变换，并且这种变换关系是一个积性函数。</p><p>值得注意的是，高维体积定义与伸缩因子定义分别从静态与动态的角度考虑几何意义下的矩阵以及行列式，这对于我们更加深入理解矩阵以及行列式的性质十分重要。</p><h3 id="反对称线性函数定义"><a href="#反对称线性函数定义" class="headerlink" title="反对称线性函数定义"></a>反对称线性函数定义</h3><blockquote><p>$n$阶行列式是$n$个$n$维线性空间的笛卡尔积上唯一一个把一组标准基映到$1$的反对称线性函数。</p><p>——华罗庚</p></blockquote><p>自行体会</p><h2 id="求行列式"><a href="#求行列式" class="headerlink" title="求行列式"></a>求行列式</h2><h3 id="定义法"><a href="#定义法" class="headerlink" title="定义法"></a>定义法</h3><p>即通过循环定义或展开定义求行列式，复杂度为$O(n!)$</p><p>当然对于二阶行列式可以直接从$detA=ad-bc$得到</p><h3 id="三角矩阵"><a href="#三角矩阵" class="headerlink" title="三角矩阵"></a>三角矩阵</h3><p>这里我们只讨论上三角矩阵，而下三角矩阵只需类比即可。</p><script type="math/tex; mode=display">A=\left[\begin{matrix}a_{11}&a_{12}&\cdots&a_{1n}\\0&a_{22}&\cdots&a_{2n}\\\vdots&\vdots&\ddots&\vdots\\0&0&\cdots&a_{nn}\\\end{matrix}\right]\\</script><p>对$A_n$的第一列进行行列式展开，可以得到</p><script type="math/tex; mode=display">detA=\sum_{i=1}^na_{i1}C_{i1}\quad(a_{i1}=0,i\neq 1)\\=(-1)^{1+1}a_{11}\cdot detA_{11}\\=a_{11}\cdot detA_{11}\\=\prod_{i=1}^na_{ii}</script><p>换句话说，每次对于要展开的矩阵，取最左列（几乎全$0$列）展开，就会以乘积的形式给结果贡献对角线上的元素。</p><p>即三角矩阵的行列式就等于对角线元素的积$(detA=\prod_{i=1}^na_{ii})$。</p><p>显然，奇异三角矩阵的对角线必然有$0$，故其行列式为$0$，这很合理。</p><h2 id="行变换、列变换与行列式"><a href="#行变换、列变换与行列式" class="headerlink" title="行变换、列变换与行列式"></a>行变换、列变换与行列式</h2><h3 id="初等行变换性质"><a href="#初等行变换性质" class="headerlink" title="初等行变换性质"></a>初等行变换性质</h3><p>我们在考虑行变换对行列式的影响时，首先就会想到从基本的初等行变换对行列式的作用的探究。</p><blockquote><p>a.若$A$通过倍加变换到达$B$，则$detB=detA$</p><p>b.若$A​$通过交换两行到达$B​$，则$detB=-detA​$</p><p>c.若$A​$通过行倍乘$k​$到达$B​$，则$detB=k\cdot detA​$</p></blockquote><p>我们在考虑初等行变换操作时，其实是站在初等矩阵的角度去考虑对行列式的影响。由于初等矩阵都是三角矩阵，所以我们可以利用上面三角矩阵的行列式求法快速得到。</p><p>对于$(a)​$，倍加变换对应矩阵是对角线为$1​$的三角矩阵，那么$detE_1=1​$。</p><p>对于$(c)$，倍乘变换对应的矩阵的对角线某项为$k$，其余为$1$的对角矩阵，那么$detE_2=k$。</p><p>对于$(b)$，交换两行可以通过倍加变换与倍乘变换实现。假设交换$row_i$、$row_j$，我们令其进行$(row_i,row_j)\rightarrow(row_i*(-1),row_j)\rightarrow(row_i+row_j,row_j)\rightarrow(row_i,row_j-row_i)\rightarrow(row_i+row_j,row_j)$，那么除了第一次运用的倍乘$(-1)$变换外，其余都是倍加变换，所以$detE_3=-1$。</p><p>我们注意到，对于$(b)​$的证明，我们并没有采用比较简洁随意的变换方式，如$(row_i,row_j)\rightarrow(arow_i+brow_j,crow_i+drow_j)​$的形式，尽管这的确符合行变换准则$(a,b,c,d\neq 0)​$，但是这其中的倍乘变换不容易统计，甚至说可能不知不觉地会出现疏漏。所以我们严格地按照行倍加的形式书写，保证本行的倍数始终是$1​$，这样子才能保证符合$(a)​$的性质。其实在平时进行行变换时也要养成这种习惯，对于行变换也会有更加深刻的体会。</p><p>通过知道了$detE_1、detE_2、detE_3$的值，我们可以利用$det(TA)=detA\cdot detT$的思想得到$B=E_kA\rightarrow detB=detA\cdot detE_k$，也就是以乘法变换的形式进行行列式上的转换。由此得到上述$(a)、(b)、(c)$的定理。</p><h3 id="初等行变换的复合"><a href="#初等行变换的复合" class="headerlink" title="初等行变换的复合"></a>初等行变换的复合</h3><p>由于任意两个可逆两个矩阵之间的可以通过初等行变换互相到达，我们同样从行列式的角度伴随着初等行变换的过程顺带地求出这两个矩阵的行列式转化关系，即</p><script type="math/tex; mode=display">det(E_p\dots E_2E_1A)=detA\cdot detE_1\cdot detE_2\cdot\,\dots\,\cdot detE_p</script><p>同样的，我们从每一个矩阵都是初等矩阵的复合矩阵可以得到</p><script type="math/tex; mode=display">det(E_p\dots E_2E_1I_n)=detE_1\cdot detE_2\cdot\,\dots\,\cdot detE_p</script><p>我们逐渐理解，正如矩阵同时具有动态与静态的特性，行列式也可以从“矩阵的特征”和“矩阵变换的相应作用”两种角度解释。矩阵乘法角度的复合与行列式相乘之间也有着美妙的对应关系。从动态的角度理解行列式能让我们更好地理解后文中的通过行化简算法求行列式的过程。</p><h3 id="列变换与转置"><a href="#列变换与转置" class="headerlink" title="列变换与转置"></a>列变换与转置</h3><p>同样的，我们在定义中已经了解到行列式的行列其实某种意义上等价，那么对于行变换操作，我们同样可以对应地得到列变换操作，这里就不再赘述。</p><p>综合行变换与列变换，我们可以从转置的角度考虑</p><script type="math/tex; mode=display">detA=detA^T</script><p>矩阵转置本身就让我们更好地联系行与列，而行与列的等价自然而然地就得到行列式意义下转置矩阵之间的等价。</p><h3 id="代数定义的角度看待行列式的初等行变换"><a href="#代数定义的角度看待行列式的初等行变换" class="headerlink" title="代数定义的角度看待行列式的初等行变换"></a>代数定义的角度看待行列式的初等行变换</h3><p>我们在代数的角度，讨论初等行变换在对于代数定义的两个式子里分别如何体现。</p><p>顺便说一句，这是刚刚想到的，还没有仔细想过……</p><h4 id="循环定义-1"><a href="#循环定义-1" class="headerlink" title="循环定义"></a>循环定义</h4><p>对于循环定义，我们有</p><script type="math/tex; mode=display">detA=\sum_{j=1}^na_{1j}C_{1j}</script><p>对于$(a)$，我们先考虑倍加行不在第$1$行，也就说行倍加变换发生在$A_{1j}$内部，其$detA_{1j}$不变，那么$detA$不变；而当倍加行为第$1$行，假设加上$krow_p$，则有</p><script type="math/tex; mode=display">detA=\sum_{j=1}^n(a_{1j}+ka_{pj})C_{1j}\\=\sum_{j=1}^na_{1j}C_{1j}+k\sum_{j=1}^na_{pj}C_{1j}\\=detA+kdetB\\其中B为用A第p行代替第1行后得到的新矩阵</script><p>我们可以看到，由于$B$的第$1$行与第$p$行完全一样，那么$B$为奇异矩阵，$detB=0$，则行倍加变换后$detA$保持不变。</p><p>对于$(c)$，我们考虑倍乘行为第$p$行，那么当$p\neq 1$时，所有的$C_{1j}$都变成$kC_{1j}$，即$detA\rightarrow kdetA$；当$p=1$时，所有的$a_{1j}$变成$ka_{1j}$，即同样$detA\rightarrow kdetA$。</p><p>对于$(b)$，我们同样可以考虑其为倍加变换与倍乘变换的相结合，但这里我们想从一个更加直观的角度去讨论。</p><p>我们先考虑交换的两行在$A_{1j}$内部，则其$detA_{1j}$变为原来的相反数，则总的$detA$也变为原来的相反数；而当交换两行中分别为第$1$行与第$p$行，我们考虑对第$1$列进行展开。当我们对$(-1)^{1+i}a_{i1}A_{i1}$，当$i\neq1 $且$i\neq p$时，新$A_{i1}$相比于原来其实也是第$1$行与第$p$行进行交换，那么$detA_{i1}\rightarrow -detA_{i1}$。下面我们考虑$i=1$与$i=p$的情况。</p><p>事实上，对于后面的任意展开分支，我们都只需要考虑$i=1$与$i=p$这两种会影响最后行列式的情况，所以我们不妨令第一次第二次取到$i=1,i=p$，以方便我们的讨论。我们讨论的重点放在对于$(-1)^{1+i}$的符号上。</p><p>当$p$为奇数，则第一次与第二次相关项变换情况为$(a_{11}A_{11},-a_{2p}A_{2p})\rightarrow(a_{11}A_{11},a_{2p}A_{2p})$，也就是最后$detA\rightarrow -detA$；当$p$为偶数时，相关项变换情况为$(a_{11}A_{11},a_{2p}A_{2p})\rightarrow (-a_{11}A_{11},a_{2p}A_{2p})$，同样$detA\rightarrow -detA$。需要注意的是，我们这里由于$a_{11}、a_{2p}$在变换前后行数分别为$(1,p-1)\rightarrow(p,1)$，显然两者奇偶性不同，即$(-1)^r$符号不一样，从而导致$detA$发生变化。</p><h4 id="展开定义-1"><a href="#展开定义-1" class="headerlink" title="展开定义"></a>展开定义</h4><p>对于展开定义，我们有</p><script type="math/tex; mode=display">detA=\sum_p (-1)^{f(p)} a_{1p1}a_{2p_2}\dots a_{np_n},f(p)=\sum_{i=1}^{n-1} [p_i>p_{i+1}]</script><p>对于$(b)$，我们考虑交换了第$u$行与第$v$行。把交换前的任意序列$p$，它的交换后序列称为$p^{‘}$，那么我们关注的就是$f(p)$与$f(p^{‘})$的关系。接下来我们分别讨论不同位置$i$受到$p_u、p_v$交换的影响。</p><p>当$i<min(u,v)$或$i>max(u,v)$时，$p_u、p_v$在变换前后始终在$p_i$的同一侧，也就是$(p_i,p_u)、(p_i,p_v)$之间的顺逆序关系没有发生变化。</p><p>当$min(u,v)&lt;i&lt;max(u,v)$时，$p_u、p_v$在变换前后分别从$p_i$一侧跳到另一侧，也就是$(p_i,p_u)、(p_i,p_v)$之间的顺逆序关系均发生变化，则对于正负号的贡献抵消，最后还是不变。</p><p>最后我们考虑$u,v$两者之间的关系，其实显然$(p_u,p_v)$之间的顺逆序改变，即逆序对数增加或减少$1$。</p><p>综合考虑，我们发现$(-1)^{f(p^{‘})}=-(-1)^{f(p)}$，也就是说除了$(p_u,p_v)$这对数对顺逆关系做出贡献外其余皆无贡献，导致最终$detA\rightarrow -detA$。</p><p>对于$(a)​$，我们考虑$row_u\rightarrow row_u+krow_v​$，则</p><script type="math/tex; mode=display">detA=\sum_p (-1)^{f(p)} a_{1p_1}a_{2p_2}\dots (a_{up_u}+ka_{vp_v})\dots a_{np_n}\\=\sum_p (-1)^{f(p)} a_{1p_1}a_{2p_2}\dots a_{up_u}\dots a_{np_n}\\+k\sum_p (-1)^{f(p)} a_{1p_1}a_{2p_2}\dots a_{vp_u}\dots a_{np_n}\\</script><p>考虑到对于某个特定的序列$p​$，我们把它对应第$u​$行与第$v​$行交换后的序列成为$p^{‘}​$，那么由上$(b)​$可得$(-1)^{f(p)}=-(-1)^{f(p^{‘})}​$，从而有</p><script type="math/tex; mode=display">(-1)^{f(p)}a_{1p_1}a_{2p_2}\dots a_{vp_u}\dots a_{vp_v}\dots a_{np_n}+(-1)^{f(p^{'})}a_{1p_1}a_{2p_2}\dots a_{vp_v}\dots a_{vp_u}\dots a_{np_n}=0</script><p>对于任意$(p,p^{‘})$成立，所以</p><script type="math/tex; mode=display">k\sum_p (-1)^{f(p)} a_{1p_1}a_{2p_2}\dots a_{vp_u}\dots a_{np_n}=0\\\Rightarrow detA=detA</script><p>即倍加变换不改变行列式。</p><p>对于$(c)$，显然对于$row_i\rightarrow krow_i$，有$\forall p,a_{i,p_i}\rightarrow ka_{i,p_i}$，故$detA\rightarrow kdetA$。</p><h4 id="对定义中一些问题的回顾"><a href="#对定义中一些问题的回顾" class="headerlink" title="对定义中一些问题的回顾"></a>对定义中一些问题的回顾</h4><p>我们在循环定义中提出过一个猜想——行列式下$a$是否位置等价？通过上述初等行变换性质的证明，我们可以看到单单着眼于某一个$a_{ij}$，它其实可以通过行/列交换到达矩阵的任意一个位置，付出的代价仅仅是正负号的改变。甚至于当$a_{ij}$移动到异行异列时，符号的变化会抵消，使得其移动保持行列式的不变。</p><p>但是我们不能仅仅从一个$a_{ij}$上思考问题，交换两行/两列的过程中其实伴随着$a_{ij}$之外的矩阵元素的变化，正如$a_{ij}$连续进行两次行交换，并不等价于它直接交换到最终那一行，因为另外两行之间的位置也发生了改变。</p><p>既然行交换没有任意性，就意味着有什么隐藏的规律对它进行着限制——也就是行交换过程中有某些事物始终不变。显然，这就是某行某列内部的联系。对于$a_{ij}​$，与它同一行的必然是那些从一开始就一直同行的元素，它们之间的相对位置可能会发生改变，但绝对不会出现某个元素窜到了其他行的情况。这就保证了某行内部联系的基本条件。</p><p>对于行内部元素的相对位置也有一些联系。行与行之间某两个同列的相对位置从一开始确定了，它们一直保持同列——这意味着行与行之间是协调的，它们保持着某种默契，使得无论是行交换、列交换、行倍加等都不能影响它们之间的相互关系。</p><p>它们之间保持着什么关系？可能就是我们所说的线性相关关系，但可能还是我们还没有接触到的某些更深的性质。</p><p>另外，在展开定义中我们思考为什么逆序对数决定了其项的附加正负符号。这在学习了行、列交换对行列式的作用后就很容易解答了。</p><p>我们考虑将$a_{11}a_{22}\dots a_{nn}$设为初始项，那么对于进行列交换的过程，其实就是创造逆序对的过程，而对应到行列式上，自然也就是$detA\rightarrow -detA$——这很合理。</p><p>当然这种思路并不严谨，事实上，逆序对数的来源其实是从构造行列式时的需求中来的——之前我们在“反对称线性函数定义”中提到行列式是唯一满足某种需求的反对称线性函数，而反对称函数就要求交换两个有序元素的同时，对应函数值变为原来的相反数。据此我们才有引入逆序对数的概念。</p><p>（我也不知道自己在说什么，将就着看吧）</p><h3 id="几何意义下看待行列式的初等行变换"><a href="#几何意义下看待行列式的初等行变换" class="headerlink" title="几何意义下看待行列式的初等行变换"></a>几何意义下看待行列式的初等行变换</h3><p>同样地，我们从高维体积定义考虑初等行变换的作用。</p><p>（由于懒得画图，请自行发挥空间想象力）</p><p>我们我们考虑2阶矩阵在平面空间中的表现，矩阵的列向量构成了一个平行四边形，而行列式就是该平行四边形的有向面积。</p><p>对于$(c)$，其实就是对四边形的某条边延长到它的$k$倍，那么其对应面积就变为原来的$k$倍。</p><p>对于$(b)$，也就是交换平行四边形的两条基本向量边，那么它的有向面积反向——这和之前所说的“右手法则”的变化相对应。</p><p>对于$(a)​$，考虑某个向量加上另一个向量的几倍，相当于往那个向量的方向上移动。由于这种移动是平行的，平行四边形的底和高都不会发生改变，自然面积也没有发生改变。</p><h3 id="求行列式2"><a href="#求行列式2" class="headerlink" title="求行列式2"></a>求行列式2</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;线性代数——行列式&quot;&gt;&lt;a href=&quot;#线性代数——行列式&quot; class=&quot;headerlink&quot; title=&quot;线性代数——行列式&quot;&gt;&lt;/a&gt;线性代数——行列式&lt;/h1&gt;&lt;h2 id=&quot;一些定义及本质&quot;&gt;&lt;a href=&quot;#一些定义及本质&quot; class=&quot;he</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/31/hello-world/"/>
    <id>http://example.com/2020/10/31/hello-world/</id>
    <published>2020-10-31T02:52:00.487Z</published>
    <updated>2020-10-31T02:52:00.487Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
